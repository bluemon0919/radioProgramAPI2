/*
 * radio program API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"log"
	"os"

	"github.com/bluemon0919/todocore/entity"
	"github.com/bluemon0919/todocore/todo"
)

// DefaultApiService is a service that implents the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
	radioProgramServer *todo.Server
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	srv := &DefaultApiService{}
	projectID := os.Getenv("PROJECT_ID")
	if "" == projectID {
		log.Fatal("PROJECT_ID is not set")
		return nil
	}
	ent := entity.NewDatastore(projectID, "RegistrationData")
	if ent == nil {
		log.Fatal("file create error")
		return nil
	}
	srv.radioProgramServer = todo.NewServer(":8080", ent)
	return srv
}

// ListGet - 未聴取の番組リストを取得します
func (s *DefaultApiService) ListGet() (interface{}, error) {
	list, err := s.radioProgramServer.GetList()
	if err != nil {
		return nil, err
	}
	return list, nil
}

// ProgramPut - 番組を聴取済みに更新します
func (s *DefaultApiService) ProgramPut(programId string) (interface{}, error) {
	err := s.radioProgramServer.PostProgram(programId)
	return nil, err
}
