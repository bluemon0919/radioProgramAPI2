/*
 * radio program API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/bluemon0919/todocore/todo"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{service: s}
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{
		{
			"ListGet",
			strings.ToUpper("Get"),
			"/api/list",
			c.ListGet,
		},
		{
			"ProgramPut",
			strings.ToUpper("Put"),
			"/api/program",
			c.ProgramPut,
		},
	}
}

// ListGet - 未聴取の番組リストを取得します
func (c *DefaultApiController) ListGet(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.ListGet()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	programs := result.([]todo.ListItem)
	EncodeJSONResponse(programs, nil, w)
}

// ProgramPut - 番組を聴取済みに更新します
func (c *DefaultApiController) ProgramPut(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	programID := query.Get("programId")
	result, err := c.service.ProgramPut(programID)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	EncodeJSONResponse(result, nil, w)
}
